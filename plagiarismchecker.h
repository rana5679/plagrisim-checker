{"payload":{"allShortcutsEnabled":true,"fileTree":{"CS2_PlagiarismChecker":{"items":[{"name":"Corpus","path":"CS2_PlagiarismChecker/Corpus","contentType":"directory"},{"name":"CS2_PlagiarismChecker.pro","path":"CS2_PlagiarismChecker/CS2_PlagiarismChecker.pro","contentType":"file"},{"name":"CS2_PlagiarismChecker.pro.user","path":"CS2_PlagiarismChecker/CS2_PlagiarismChecker.pro.user","contentType":"file"},{"name":"corpus_names.txt","path":"CS2_PlagiarismChecker/corpus_names.txt","contentType":"file"},{"name":"document.h","path":"CS2_PlagiarismChecker/document.h","contentType":"file"},{"name":"insert_doc.cpp","path":"CS2_PlagiarismChecker/insert_doc.cpp","contentType":"file"},{"name":"insert_doc.h","path":"CS2_PlagiarismChecker/insert_doc.h","contentType":"file"},{"name":"main.cpp","path":"CS2_PlagiarismChecker/main.cpp","contentType":"file"},{"name":"mainwindow.cpp","path":"CS2_PlagiarismChecker/mainwindow.cpp","contentType":"file"},{"name":"mainwindow.h","path":"CS2_PlagiarismChecker/mainwindow.h","contentType":"file"},{"name":"mainwindow.ui","path":"CS2_PlagiarismChecker/mainwindow.ui","contentType":"file"},{"name":"plagiarismchecker.h","path":"CS2_PlagiarismChecker/plagiarismchecker.h","contentType":"file"},{"name":"results.cpp","path":"CS2_PlagiarismChecker/results.cpp","contentType":"file"},{"name":"results.h","path":"CS2_PlagiarismChecker/results.h","contentType":"file"},{"name":"results.ui","path":"CS2_PlagiarismChecker/results.ui","contentType":"file"},{"name":"userInput.txt","path":"CS2_PlagiarismChecker/userInput.txt","contentType":"file"},{"name":"userinput.cpp","path":"CS2_PlagiarismChecker/userinput.cpp","contentType":"file"},{"name":"userinput.h","path":"CS2_PlagiarismChecker/userinput.h","contentType":"file"},{"name":"userinput.ui","path":"CS2_PlagiarismChecker/userinput.ui","contentType":"file"}],"totalCount":19},"":{"items":[{"name":"CS2_PlagiarismChecker","path":"CS2_PlagiarismChecker","contentType":"directory"},{"name":"CSproj 2","path":"CSproj 2","contentType":"directory"},{"name":"CS Project Report.pdf","path":"CS Project Report.pdf","contentType":"file"},{"name":"README.md","path":"README.md","contentType":"file"},{"name":"UML.jpg","path":"UML.jpg","contentType":"file"}],"totalCount":5}},"fileTreeProcessingTime":4.9003429999999994,"foldersToFetch":[],"reducedMotionEnabled":"system","repo":{"id":636219966,"defaultBranch":"main","name":"CS2PROJ-milestone2","ownerLogin":"HayaShalaby","currentUserCanPush":true,"isFork":false,"isEmpty":false,"createdAt":"2023-05-04T14:18:18.000+03:00","ownerAvatar":"https://avatars.githubusercontent.com/u/124674435?v=4","public":true,"private":false,"isOrgOwned":false},"symbolsExpanded":false,"treeExpanded":true,"refInfo":{"name":"main","listCacheKey":"v0:1684022674.5493991","canEdit":true,"refType":"branch","currentOid":"fbbb919dd4623b4cb66c69defa7f8cbb344aa9a4"},"path":"CS2_PlagiarismChecker/plagiarismchecker.h","currentUser":{"id":124688927,"login":"rana5679","userEmail":"ranataher@aucegypt.edu"},"blob":{"rawLines":["//Haya Shalaby, Rana Taher, Jana Elmidany\r","#ifndef _PLAGIARISMCHECKER_H\r","#define _PLAGIARISMCHECKER_H\r","\r","#include <QString>\r","#include <QFile>\r","#include <QTextStream>\r","#include <QDebug>\r","#include <QVector>\r","#include \"Document.h\"\r","\r","class PlagiarismChecker {\r","private:\r","    int totalPlag;\r","    int totalRef;\r","    int totalSim;\r","    int totalQuotes;\r","    Document userDoc;\r","    QVector<Document> database;\r","    QVector<int> quoteIndex;\r","    Document highlightDoc;\r","    bool match;\r","    QChar type;\r","\r","public:\r","    PlagiarismChecker()\r","    {\r","        userDoc = Document();\r","\r","        totalPlag = 0;\r","        totalRef = 0;\r","        totalSim = 0;\r","        totalQuotes = 0;\r","        match = false;\r","    }\r","\r","    PlagiarismChecker(QString userFile, QString corpusFiles, QChar aType)\r","    {\r","        userDoc = Document(userFile);\r","        set_type(aType);\r","        createCorpus(corpusFiles);\r","    }\r","\r","    void createCorpus(QString corpusFiles)\r","    {\r","        QString filename;\r","        Document corpus;\r","        QFile files(corpusFiles);\r","\r","        if (files.open(QIODevice::ReadOnly | QIODevice::Text)) {\r","            QTextStream in(&files);\r","            while (!files.atEnd()) {\r","                in >> filename;\r","                corpus = Document(filename);\r","                database.push_back(corpus);\r","            }\r","            files.close();\r","        }\r","    }\r","\r","    bool isQuote(QString line)\r","    {\r","        if (line.contains('\"'))\r","        {\r","            int firstIndex = line.indexOf('\"');\r","            int lastIndex = line.lastIndexOf('\"');\r","            if (firstIndex != lastIndex)\r","                return true;\r","        }\r","        return false;\r","    }\r","\r","    bool isRef(QString sent)\r","    {\r","        if (sent.startsWith(\"References\") || sent.startsWith(\"Works Cited\"))\r","        {\r","            return true;\r","        }\r","        return false;\r","    }\r","\r","    void calcPlag()\r","    {\r","        totalPlag = totalSim - (totalQuotes + totalRef);\r","    }\r","\r","    void compDoc()\r","    {\r","        QVector<QString> dataLines, userLines;\r","        userLines = userDoc.getLines();\r","        for (int i = 0; i < database.size(); i++)\r","        {\r","            dataLines = database[i].getLines();\r","            compLines(dataLines, userLines,type);\r","        }\r","        calcPlag();\r","    }\r","\r","    QVector<QString> createPat(QVector<QString> patterns)\r","    {\r","        QVector<QString> fullPats;\r","\r","        for (int s = 0; s < fullPats.size() + 1; s++)\r","        {\r","            QString temp = \"\";\r","            int count = 0;\r","\r","            while (count < 5 && count < patterns.size())\r","            {\r","                temp += ' ' + patterns[count];\r","                count++;\r","            }\r","\r","            if (temp != \"\")\r","            {\r","                fullPats.push_back(temp);\r","            }\r","            else\r","            {\r","                break;\r","            }\r","\r","            patterns.erase(patterns.begin());\r","            if (patterns.size() < 5)\r","                break;\r","        }\r","\r","        return fullPats;\r","    }\r","\r","    void set_type(QChar ty)\r","    {\r","        type = ty;\r","    }\r","\r","    void compLines(QVector<QString> data , QVector<QString> user, QChar type)\r","    {\r","        long threshold;\r","        bool x;\r","        QVector<QString> patterns;// vector of words\r","        QVector<QString> fullPats;// vector of patterns\r","\r","        for(int j=0; j<user.size(); j++)\r","        {\r","            x=isRef(user[j]);\r","            if(x==true && totalRef==0)\r","            {\r","                for(int in=j ; in<user.size() ; in++)\r","                {\r","                    totalRef ++;\r","                    totalSim ++;\r","                }\r","                break;\r","            }\r","            else if(isQuote(user[j]))\r","            {\r","                totalQuotes++;\r","                totalSim ++;\r","            }\r","            else\r","            {\r","                patterns=getPat(user[j]);\r","                if(patterns.size()<5)\r","                {\r","                    continue;\r","                }\r","\r","                fullPats=createPat(patterns);\r","\r","                bool rabin=false;\r","                if(type=='r')\r","                {\r","                    for(int index=0 ; index<fullPats.size() ;index++ ){\r","                        for(int k=0 ; k<data[k].size() ; k++)\r","                        {\r","                            if(rabinKarpSearch(fullPats[index], data[k] , 97))\r","                            {\r","                                rabin=true;\r","                                totalSim ++;\r","                                break;\r","                            }\r","                        }\r","                        if(rabin)\r","                            break;\r","                    }\r","                }\r","                else{\r","                    for(int k=0 ; k<data[k].size() ; k++)\r","                    {\r","                        if(data[k].length() > user[j].length())\r","                            threshold=user[j].length()/2;\r","                        else\r","                            threshold=data[j].length()/2;\r","\r","                        if(bruteforce(user[j],data[k],threshold))\r","                        {\r","                            totalSim ++;\r","                            break;\r","                        }\r","                    }\r","                }\r","            }\r","        }\r","    }\r","\r","    bool bruteforce(QString usertxt, QString datatxt, qint64 threshold )\r","    {\r","        int distance=hammingDistance( usertxt, datatxt);\r","        return (distance <= threshold);\r","    }\r","\r","    QVector<QString> getPat(QString sentence)\r","    {\r","        QVector<QString> pattern;\r","        QString temp;\r","\r","        for(int i=0 ; i<sentence.length();)\r","        {\r","            temp=\"\";\r","            if(sentence[i]==' ')\r","            {\r","                i++;\r","                continue;\r","            }\r","            for(int j=i ; j<sentence.length() ; j++)\r","            {\r","                if (sentence[j] ==' ')\r","                {\r","                    break;\r","                }\r","                temp += sentence[j];\r","            }\r","\r","            pattern.push_back(temp);\r","            i += temp.length();\r","        }\r","\r","        return pattern;\r","\r","    }\r","\r","    int hammingDistance(QString str1, QString str2)\r","    {\r","        int distance = 0;\r","        for (int i = 0; i < str1.length(); i++) {\r","            if (str1[i] != str2[i]) {\r","                distance++;\r","            }\r","        }\r","        return distance;\r","    }\r","\r","    bool rabinKarpSearch(QString pat, QString txt , int q)\r","    {\r","        int d = 256; // number of characters in the input alphabet\r","        long M = pat.length();\r","        long N = txt.length();\r","        int i, j;\r","        int p = 0; // hash value for pattern\r","        int t = 0; // hash value for txt\r","        int h = 1;\r","\r","        // The value of h would be \"pow(d, M-1)%q\"\r","        for (i = 0; i < M - 1; i++)\r","            h = (h * d) % q;\r","\r","        // Calculate the hash value of pattern and first window of text\r","        for (i = 0; i < M; i++) {\r","            p = (d * p + pat[i].toLatin1()) % q;\r","            t = (d * t + txt[i].toLatin1()) % q;\r","        }\r","\r","        // Slide the pattern over text one by one\r","        for (i = 0; i <= N - M; i++) {\r","            // Check the hash values of current window of text and pattern\r","            // If the hash values match, then only check for characters one by one\r","            if (p == t) {\r","                /* Check for characters one by one */\r","                for (j = 0; j < M; j++) {\r","                    if (txt[i + j] != pat[j]) {\r","                        break;\r","                    }\r","                }\r","\r","                // If p == t and pat[0...M-1] = txt[i, i+1, ...i+M-1]\r","                if (j == M) {\r","                    return true;\r","                }\r","            }\r","\r","            // Calculate hash value for next window of text:\r","            // Remove leading digit, add trailing digit\r","            if (i < N - M) {\r","                t = (d * (t - txt[i].toLatin1() * h) + txt[i + M].toLatin1()) % q;\r","\r","                // We might get negative value of t, converting it to positive\r","                if (t < 0)\r","                    t = (t + q);\r","            }\r","        }\r","\r","        return false;\r","    }\r","\r","    int getTotalPlag()\r","    {\r","        return totalPlag;\r","    }\r","\r","    int getTotalRef()\r","    {\r","        return totalRef;\r","    }\r","\r","    int getTotalSim()\r","    {\r","        return totalSim;\r","    }\r","\r","    int getTotalQuotes()\r","    {\r","        return totalQuotes;\r","    }\r","\r","\r","};\r","\r","\r","#endif //_PLAGIARISMCHECKER_H\r"],"stylingDirectives":[[{"start":0,"end":41,"cssClass":"pl-c"},{"start":0,"end":2,"cssClass":"pl-c"}],[{"start":1,"end":7,"cssClass":"pl-k"}],[{"start":1,"end":7,"cssClass":"pl-k"},{"start":8,"end":28,"cssClass":"pl-en"}],[],[{"start":1,"end":8,"cssClass":"pl-k"},{"start":9,"end":18,"cssClass":"pl-s"},{"start":9,"end":10,"cssClass":"pl-pds"},{"start":17,"end":18,"cssClass":"pl-pds"}],[{"start":1,"end":8,"cssClass":"pl-k"},{"start":9,"end":16,"cssClass":"pl-s"},{"start":9,"end":10,"cssClass":"pl-pds"},{"start":15,"end":16,"cssClass":"pl-pds"}],[{"start":1,"end":8,"cssClass":"pl-k"},{"start":9,"end":22,"cssClass":"pl-s"},{"start":9,"end":10,"cssClass":"pl-pds"},{"start":21,"end":22,"cssClass":"pl-pds"}],[{"start":1,"end":8,"cssClass":"pl-k"},{"start":9,"end":17,"cssClass":"pl-s"},{"start":9,"end":10,"cssClass":"pl-pds"},{"start":16,"end":17,"cssClass":"pl-pds"}],[{"start":1,"end":8,"cssClass":"pl-k"},{"start":9,"end":18,"cssClass":"pl-s"},{"start":9,"end":10,"cssClass":"pl-pds"},{"start":17,"end":18,"cssClass":"pl-pds"}],[{"start":1,"end":8,"cssClass":"pl-k"},{"start":9,"end":21,"cssClass":"pl-s"},{"start":9,"end":10,"cssClass":"pl-pds"},{"start":20,"end":21,"cssClass":"pl-pds"}],[],[{"start":0,"end":5,"cssClass":"pl-k"},{"start":6,"end":23,"cssClass":"pl-en"}],[{"start":0,"end":8,"cssClass":"pl-k"}],[{"start":4,"end":7,"cssClass":"pl-k"}],[{"start":4,"end":7,"cssClass":"pl-k"}],[{"start":4,"end":7,"cssClass":"pl-k"}],[{"start":4,"end":7,"cssClass":"pl-k"}],[],[],[{"start":12,"end":15,"cssClass":"pl-k"}],[],[{"start":4,"end":8,"cssClass":"pl-k"}],[],[],[{"start":0,"end":7,"cssClass":"pl-k"}],[{"start":4,"end":21,"cssClass":"pl-en"}],[],[{"start":18,"end":26,"cssClass":"pl-c1"}],[],[{"start":20,"end":21,"cssClass":"pl-c1"}],[{"start":19,"end":20,"cssClass":"pl-c1"}],[{"start":19,"end":20,"cssClass":"pl-c1"}],[{"start":22,"end":23,"cssClass":"pl-c1"}],[{"start":16,"end":21,"cssClass":"pl-c1"}],[],[],[{"start":4,"end":21,"cssClass":"pl-en"}],[],[{"start":18,"end":26,"cssClass":"pl-c1"}],[{"start":8,"end":16,"cssClass":"pl-c1"}],[{"start":8,"end":20,"cssClass":"pl-c1"}],[],[],[{"start":4,"end":8,"cssClass":"pl-k"},{"start":9,"end":21,"cssClass":"pl-en"}],[],[],[],[{"start":14,"end":19,"cssClass":"pl-smi"}],[],[{"start":8,"end":10,"cssClass":"pl-k"},{"start":18,"end":22,"cssClass":"pl-c1"}],[{"start":24,"end":26,"cssClass":"pl-smi"}],[{"start":12,"end":17,"cssClass":"pl-k"},{"start":26,"end":31,"cssClass":"pl-c1"}],[],[{"start":25,"end":33,"cssClass":"pl-c1"}],[{"start":25,"end":34,"cssClass":"pl-c1"}],[],[{"start":18,"end":23,"cssClass":"pl-c1"}],[],[],[],[{"start":4,"end":8,"cssClass":"pl-k"},{"start":9,"end":16,"cssClass":"pl-en"}],[],[{"start":8,"end":10,"cssClass":"pl-k"},{"start":17,"end":25,"cssClass":"pl-c1"},{"start":26,"end":29,"cssClass":"pl-s"},{"start":26,"end":27,"cssClass":"pl-pds"},{"start":28,"end":29,"cssClass":"pl-pds"}],[],[{"start":12,"end":15,"cssClass":"pl-k"},{"start":34,"end":41,"cssClass":"pl-c1"},{"start":42,"end":45,"cssClass":"pl-s"},{"start":42,"end":43,"cssClass":"pl-pds"},{"start":44,"end":45,"cssClass":"pl-pds"}],[{"start":12,"end":15,"cssClass":"pl-k"},{"start":33,"end":44,"cssClass":"pl-c1"},{"start":45,"end":48,"cssClass":"pl-s"},{"start":45,"end":46,"cssClass":"pl-pds"},{"start":47,"end":48,"cssClass":"pl-pds"}],[{"start":12,"end":14,"cssClass":"pl-k"}],[{"start":16,"end":22,"cssClass":"pl-k"},{"start":23,"end":27,"cssClass":"pl-c1"}],[],[{"start":8,"end":14,"cssClass":"pl-k"},{"start":15,"end":20,"cssClass":"pl-c1"}],[],[],[{"start":4,"end":8,"cssClass":"pl-k"},{"start":9,"end":14,"cssClass":"pl-en"}],[],[{"start":8,"end":10,"cssClass":"pl-k"},{"start":17,"end":27,"cssClass":"pl-c1"},{"start":28,"end":40,"cssClass":"pl-s"},{"start":28,"end":29,"cssClass":"pl-pds"},{"start":39,"end":40,"cssClass":"pl-pds"},{"start":50,"end":60,"cssClass":"pl-c1"},{"start":61,"end":74,"cssClass":"pl-s"},{"start":61,"end":62,"cssClass":"pl-pds"},{"start":73,"end":74,"cssClass":"pl-pds"}],[],[{"start":12,"end":18,"cssClass":"pl-k"},{"start":19,"end":23,"cssClass":"pl-c1"}],[],[{"start":8,"end":14,"cssClass":"pl-k"},{"start":15,"end":20,"cssClass":"pl-c1"}],[],[],[{"start":4,"end":8,"cssClass":"pl-k"},{"start":9,"end":17,"cssClass":"pl-en"}],[],[],[],[],[{"start":4,"end":8,"cssClass":"pl-k"},{"start":9,"end":16,"cssClass":"pl-en"}],[],[],[{"start":28,"end":36,"cssClass":"pl-c1"}],[{"start":8,"end":11,"cssClass":"pl-k"},{"start":13,"end":16,"cssClass":"pl-k"},{"start":21,"end":22,"cssClass":"pl-c1"},{"start":37,"end":41,"cssClass":"pl-c1"}],[],[{"start":36,"end":44,"cssClass":"pl-c1"}],[{"start":12,"end":21,"cssClass":"pl-c1"}],[],[{"start":8,"end":16,"cssClass":"pl-c1"}],[],[],[{"start":21,"end":30,"cssClass":"pl-en"}],[],[],[],[{"start":8,"end":11,"cssClass":"pl-k"},{"start":13,"end":16,"cssClass":"pl-k"},{"start":21,"end":22,"cssClass":"pl-c1"},{"start":37,"end":41,"cssClass":"pl-c1"},{"start":46,"end":47,"cssClass":"pl-c1"}],[],[{"start":27,"end":29,"cssClass":"pl-s"},{"start":27,"end":28,"cssClass":"pl-pds"},{"start":28,"end":29,"cssClass":"pl-pds"}],[{"start":12,"end":15,"cssClass":"pl-k"},{"start":24,"end":25,"cssClass":"pl-c1"}],[],[{"start":12,"end":17,"cssClass":"pl-k"},{"start":27,"end":28,"cssClass":"pl-c1"},{"start":49,"end":53,"cssClass":"pl-c1"}],[],[{"start":24,"end":27,"cssClass":"pl-s"},{"start":24,"end":25,"cssClass":"pl-pds"},{"start":26,"end":27,"cssClass":"pl-pds"}],[],[],[],[{"start":12,"end":14,"cssClass":"pl-k"},{"start":24,"end":26,"cssClass":"pl-s"},{"start":24,"end":25,"cssClass":"pl-pds"},{"start":25,"end":26,"cssClass":"pl-pds"}],[],[{"start":25,"end":34,"cssClass":"pl-c1"}],[],[{"start":12,"end":16,"cssClass":"pl-k"}],[],[{"start":16,"end":21,"cssClass":"pl-k"}],[],[],[{"start":21,"end":26,"cssClass":"pl-c1"},{"start":36,"end":41,"cssClass":"pl-c1"}],[{"start":12,"end":14,"cssClass":"pl-k"},{"start":25,"end":29,"cssClass":"pl-c1"},{"start":34,"end":35,"cssClass":"pl-c1"}],[{"start":16,"end":21,"cssClass":"pl-k"}],[],[],[{"start":8,"end":14,"cssClass":"pl-k"}],[],[],[{"start":4,"end":8,"cssClass":"pl-k"},{"start":9,"end":17,"cssClass":"pl-en"}],[],[],[],[],[{"start":4,"end":8,"cssClass":"pl-k"},{"start":9,"end":18,"cssClass":"pl-en"}],[],[{"start":8,"end":12,"cssClass":"pl-k"}],[{"start":8,"end":12,"cssClass":"pl-k"}],[{"start":34,"end":52,"cssClass":"pl-c"},{"start":34,"end":36,"cssClass":"pl-c"}],[{"start":34,"end":55,"cssClass":"pl-c"},{"start":34,"end":36,"cssClass":"pl-c"}],[],[{"start":8,"end":11,"cssClass":"pl-k"},{"start":12,"end":15,"cssClass":"pl-k"},{"start":18,"end":19,"cssClass":"pl-c1"},{"start":28,"end":32,"cssClass":"pl-c1"}],[],[{"start":14,"end":19,"cssClass":"pl-c1"}],[{"start":12,"end":14,"cssClass":"pl-k"},{"start":18,"end":22,"cssClass":"pl-c1"},{"start":36,"end":37,"cssClass":"pl-c1"}],[],[{"start":16,"end":19,"cssClass":"pl-k"},{"start":20,"end":23,"cssClass":"pl-k"},{"start":39,"end":43,"cssClass":"pl-c1"}],[],[],[],[],[{"start":16,"end":21,"cssClass":"pl-k"}],[],[{"start":12,"end":16,"cssClass":"pl-k"},{"start":17,"end":19,"cssClass":"pl-k"},{"start":20,"end":27,"cssClass":"pl-c1"}],[],[],[],[],[{"start":12,"end":16,"cssClass":"pl-k"}],[],[{"start":25,"end":31,"cssClass":"pl-c1"}],[{"start":16,"end":18,"cssClass":"pl-k"},{"start":28,"end":32,"cssClass":"pl-c1"},{"start":35,"end":36,"cssClass":"pl-c1"}],[],[{"start":20,"end":28,"cssClass":"pl-k"}],[],[],[{"start":25,"end":34,"cssClass":"pl-c1"}],[],[{"start":16,"end":20,"cssClass":"pl-k"},{"start":27,"end":32,"cssClass":"pl-c1"}],[{"start":16,"end":18,"cssClass":"pl-k"},{"start":25,"end":28,"cssClass":"pl-s"},{"start":25,"end":26,"cssClass":"pl-pds"},{"start":27,"end":28,"cssClass":"pl-pds"}],[],[{"start":20,"end":23,"cssClass":"pl-k"},{"start":24,"end":27,"cssClass":"pl-k"},{"start":28,"end":33,"cssClass":"pl-c1"},{"start":34,"end":35,"cssClass":"pl-c1"},{"start":38,"end":43,"cssClass":"pl-c1"},{"start":53,"end":57,"cssClass":"pl-c1"},{"start":61,"end":66,"cssClass":"pl-c1"}],[{"start":24,"end":27,"cssClass":"pl-k"},{"start":28,"end":31,"cssClass":"pl-k"},{"start":34,"end":35,"cssClass":"pl-c1"},{"start":48,"end":52,"cssClass":"pl-c1"}],[],[{"start":28,"end":30,"cssClass":"pl-k"},{"start":31,"end":46,"cssClass":"pl-c1"},{"start":56,"end":61,"cssClass":"pl-c1"},{"start":74,"end":76,"cssClass":"pl-c1"}],[],[{"start":38,"end":42,"cssClass":"pl-c1"}],[],[{"start":32,"end":37,"cssClass":"pl-k"}],[],[],[{"start":24,"end":26,"cssClass":"pl-k"}],[{"start":28,"end":33,"cssClass":"pl-k"}],[],[],[{"start":16,"end":20,"cssClass":"pl-k"}],[{"start":20,"end":23,"cssClass":"pl-k"},{"start":24,"end":27,"cssClass":"pl-k"},{"start":30,"end":31,"cssClass":"pl-c1"},{"start":44,"end":48,"cssClass":"pl-c1"}],[],[{"start":24,"end":26,"cssClass":"pl-k"},{"start":35,"end":41,"cssClass":"pl-c1"},{"start":54,"end":60,"cssClass":"pl-c1"}],[{"start":46,"end":52,"cssClass":"pl-c1"},{"start":55,"end":56,"cssClass":"pl-c1"}],[{"start":24,"end":28,"cssClass":"pl-k"}],[{"start":46,"end":52,"cssClass":"pl-c1"},{"start":55,"end":56,"cssClass":"pl-c1"}],[],[{"start":24,"end":26,"cssClass":"pl-k"},{"start":27,"end":37,"cssClass":"pl-c1"}],[],[],[{"start":28,"end":33,"cssClass":"pl-k"}],[],[],[],[],[],[],[],[{"start":4,"end":8,"cssClass":"pl-k"},{"start":9,"end":19,"cssClass":"pl-en"}],[],[{"start":8,"end":11,"cssClass":"pl-k"},{"start":21,"end":36,"cssClass":"pl-c1"}],[{"start":8,"end":14,"cssClass":"pl-k"}],[],[],[{"start":21,"end":27,"cssClass":"pl-en"}],[],[],[],[],[{"start":8,"end":11,"cssClass":"pl-k"},{"start":12,"end":15,"cssClass":"pl-k"},{"start":18,"end":19,"cssClass":"pl-c1"},{"start":33,"end":39,"cssClass":"pl-c1"}],[],[{"start":17,"end":19,"cssClass":"pl-s"},{"start":17,"end":18,"cssClass":"pl-pds"},{"start":18,"end":19,"cssClass":"pl-pds"}],[{"start":12,"end":14,"cssClass":"pl-k"},{"start":28,"end":31,"cssClass":"pl-s"},{"start":28,"end":29,"cssClass":"pl-pds"},{"start":30,"end":31,"cssClass":"pl-pds"}],[],[],[{"start":16,"end":24,"cssClass":"pl-k"}],[],[{"start":12,"end":15,"cssClass":"pl-k"},{"start":16,"end":19,"cssClass":"pl-k"},{"start":37,"end":43,"cssClass":"pl-c1"}],[],[{"start":16,"end":18,"cssClass":"pl-k"},{"start":34,"end":37,"cssClass":"pl-s"},{"start":34,"end":35,"cssClass":"pl-pds"},{"start":36,"end":37,"cssClass":"pl-pds"}],[],[{"start":20,"end":25,"cssClass":"pl-k"}],[],[],[],[],[{"start":20,"end":29,"cssClass":"pl-c1"}],[{"start":22,"end":28,"cssClass":"pl-c1"}],[],[],[{"start":8,"end":14,"cssClass":"pl-k"}],[],[],[],[{"start":4,"end":7,"cssClass":"pl-k"},{"start":8,"end":23,"cssClass":"pl-en"}],[],[{"start":8,"end":11,"cssClass":"pl-k"},{"start":23,"end":24,"cssClass":"pl-c1"}],[{"start":8,"end":11,"cssClass":"pl-k"},{"start":13,"end":16,"cssClass":"pl-k"},{"start":21,"end":22,"cssClass":"pl-c1"},{"start":33,"end":39,"cssClass":"pl-c1"}],[{"start":12,"end":14,"cssClass":"pl-k"}],[],[],[],[{"start":8,"end":14,"cssClass":"pl-k"}],[],[],[{"start":4,"end":8,"cssClass":"pl-k"},{"start":9,"end":24,"cssClass":"pl-en"},{"start":52,"end":55,"cssClass":"pl-k"}],[],[{"start":8,"end":11,"cssClass":"pl-k"},{"start":16,"end":19,"cssClass":"pl-c1"},{"start":21,"end":66,"cssClass":"pl-c"},{"start":21,"end":23,"cssClass":"pl-c"}],[{"start":8,"end":12,"cssClass":"pl-k"},{"start":21,"end":27,"cssClass":"pl-c1"}],[{"start":8,"end":12,"cssClass":"pl-k"},{"start":21,"end":27,"cssClass":"pl-c1"}],[{"start":8,"end":11,"cssClass":"pl-k"}],[{"start":8,"end":11,"cssClass":"pl-k"},{"start":16,"end":17,"cssClass":"pl-c1"},{"start":19,"end":44,"cssClass":"pl-c"},{"start":19,"end":21,"cssClass":"pl-c"}],[{"start":8,"end":11,"cssClass":"pl-k"},{"start":16,"end":17,"cssClass":"pl-c1"},{"start":19,"end":40,"cssClass":"pl-c"},{"start":19,"end":21,"cssClass":"pl-c"}],[{"start":8,"end":11,"cssClass":"pl-k"},{"start":16,"end":17,"cssClass":"pl-c1"}],[],[{"start":8,"end":50,"cssClass":"pl-c"},{"start":8,"end":10,"cssClass":"pl-c"}],[{"start":8,"end":11,"cssClass":"pl-k"},{"start":17,"end":18,"cssClass":"pl-c1"},{"start":28,"end":29,"cssClass":"pl-c1"}],[],[],[{"start":8,"end":71,"cssClass":"pl-c"},{"start":8,"end":10,"cssClass":"pl-c"}],[{"start":8,"end":11,"cssClass":"pl-k"},{"start":17,"end":18,"cssClass":"pl-c1"}],[{"start":32,"end":40,"cssClass":"pl-c1"}],[{"start":32,"end":40,"cssClass":"pl-c1"}],[],[],[{"start":8,"end":49,"cssClass":"pl-c"},{"start":8,"end":10,"cssClass":"pl-c"}],[{"start":8,"end":11,"cssClass":"pl-k"},{"start":17,"end":18,"cssClass":"pl-c1"}],[{"start":12,"end":74,"cssClass":"pl-c"},{"start":12,"end":14,"cssClass":"pl-c"}],[{"start":12,"end":82,"cssClass":"pl-c"},{"start":12,"end":14,"cssClass":"pl-c"}],[{"start":12,"end":14,"cssClass":"pl-k"}],[{"start":16,"end":53,"cssClass":"pl-c"},{"start":16,"end":18,"cssClass":"pl-c"},{"start":51,"end":53,"cssClass":"pl-c"}],[{"start":16,"end":19,"cssClass":"pl-k"},{"start":25,"end":26,"cssClass":"pl-c1"}],[{"start":20,"end":22,"cssClass":"pl-k"}],[{"start":24,"end":29,"cssClass":"pl-k"}],[],[],[],[{"start":16,"end":69,"cssClass":"pl-c"},{"start":16,"end":18,"cssClass":"pl-c"}],[{"start":16,"end":18,"cssClass":"pl-k"}],[{"start":20,"end":26,"cssClass":"pl-k"},{"start":27,"end":31,"cssClass":"pl-c1"}],[],[],[],[{"start":12,"end":60,"cssClass":"pl-c"},{"start":12,"end":14,"cssClass":"pl-c"}],[{"start":12,"end":55,"cssClass":"pl-c"},{"start":12,"end":14,"cssClass":"pl-c"}],[{"start":12,"end":14,"cssClass":"pl-k"}],[{"start":37,"end":45,"cssClass":"pl-c1"},{"start":66,"end":74,"cssClass":"pl-c1"}],[],[{"start":16,"end":78,"cssClass":"pl-c"},{"start":16,"end":18,"cssClass":"pl-c"}],[{"start":16,"end":18,"cssClass":"pl-k"},{"start":24,"end":25,"cssClass":"pl-c1"}],[],[],[],[],[{"start":8,"end":14,"cssClass":"pl-k"},{"start":15,"end":20,"cssClass":"pl-c1"}],[],[],[{"start":4,"end":7,"cssClass":"pl-k"},{"start":8,"end":20,"cssClass":"pl-en"}],[],[{"start":8,"end":14,"cssClass":"pl-k"}],[],[],[{"start":4,"end":7,"cssClass":"pl-k"},{"start":8,"end":19,"cssClass":"pl-en"}],[],[{"start":8,"end":14,"cssClass":"pl-k"}],[],[],[{"start":4,"end":7,"cssClass":"pl-k"},{"start":8,"end":19,"cssClass":"pl-en"}],[],[{"start":8,"end":14,"cssClass":"pl-k"}],[],[],[{"start":4,"end":7,"cssClass":"pl-k"},{"start":8,"end":22,"cssClass":"pl-en"}],[],[{"start":8,"end":14,"cssClass":"pl-k"}],[],[],[],[],[],[],[{"start":1,"end":6,"cssClass":"pl-k"},{"start":7,"end":29,"cssClass":"pl-c"},{"start":7,"end":9,"cssClass":"pl-c"}]],"csv":null,"csvError":null,"dependabotInfo":{"showConfigurationBanner":null,"configFilePath":null,"networkDependabotPath":"/HayaShalaby/CS2PROJ-milestone2/network/updates","dismissConfigurationNoticePath":"/settings/dismiss-notice/dependabot_configuration_notice","configurationNoticeDismissed":false,"repoAlertsPath":"/HayaShalaby/CS2PROJ-milestone2/security/dependabot","repoSecurityAndAnalysisPath":"/HayaShalaby/CS2PROJ-milestone2/settings/security_analysis","repoOwnerIsOrg":false,"currentUserCanAdminRepo":false},"displayName":"plagiarismchecker.h","displayUrl":"https://github.com/HayaShalaby/CS2PROJ-milestone2/blob/main/CS2_PlagiarismChecker/plagiarismchecker.h?raw=true","headerInfo":{"blobSize":"8.27 KB","deleteInfo":{"deleteTooltip":"Delete this file"},"editInfo":{"editTooltip":"Edit this file"},"ghDesktopPath":"https://desktop.github.com","gitLfsPath":null,"onBranch":true,"shortPath":"3a2428c","siteNavLoginPath":"/login?return_to=https%3A%2F%2Fgithub.com%2FHayaShalaby%2FCS2PROJ-milestone2%2Fblob%2Fmain%2FCS2_PlagiarismChecker%2Fplagiarismchecker.h","isCSV":false,"isRichtext":false,"toc":null,"lineInfo":{"truncatedLoc":"329","truncatedSloc":"283"},"mode":"file"},"image":false,"isCodeownersFile":null,"isPlain":false,"isValidLegacyIssueTemplate":false,"issueTemplateHelpUrl":"https://docs.github.com/articles/about-issue-and-pull-request-templates","issueTemplate":null,"discussionTemplate":null,"language":"C++","languageID":43,"large":false,"loggedIn":true,"newDiscussionPath":"/HayaShalaby/CS2PROJ-milestone2/discussions/new","newIssuePath":"/HayaShalaby/CS2PROJ-milestone2/issues/new","planSupportInfo":{"repoIsFork":null,"repoOwnedByCurrentUser":null,"requestFullPath":"/HayaShalaby/CS2PROJ-milestone2/blob/main/CS2_PlagiarismChecker/plagiarismchecker.h","showFreeOrgGatedFeatureMessage":null,"showPlanSupportBanner":null,"upgradeDataAttributes":null,"upgradePath":null},"publishBannersInfo":{"dismissActionNoticePath":"/settings/dismiss-notice/publish_action_from_dockerfile","dismissStackNoticePath":"/settings/dismiss-notice/publish_stack_from_file","releasePath":"/HayaShalaby/CS2PROJ-milestone2/releases/new?marketplace=true","showPublishActionBanner":false,"showPublishStackBanner":false},"renderImageOrRaw":false,"richText":null,"renderedFileInfo":null,"shortPath":null,"tabSize":8,"topBannersInfo":{"overridingGlobalFundingFile":false,"globalPreferredFundingPath":null,"repoOwner":"HayaShalaby","repoName":"CS2PROJ-milestone2","showInvalidCitationWarning":false,"citationHelpUrl":"https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/creating-a-repository-on-github/about-citation-files","showDependabotConfigurationBanner":null,"actionsOnboardingTip":null},"truncated":false,"viewable":true,"workflowRedirectUrl":null,"symbols":{"timedOut":false,"notAnalyzed":false,"symbols":[{"name":"PlagiarismChecker","kind":"class","identStart":237,"identEnd":254,"extentStart":231,"extentEnd":8429,"fullyQualifiedName":"PlagiarismChecker","identUtf16":{"start":{"lineNumber":11,"utf16Col":6},"end":{"lineNumber":11,"utf16Col":23}},"extentUtf16":{"start":{"lineNumber":11,"utf16Col":0},"end":{"lineNumber":325,"utf16Col":1}}},{"name":"PlagiarismChecker","kind":"function","identStart":511,"identEnd":528,"extentStart":511,"extentEnd":697,"fullyQualifiedName":"PlagiarismChecker::PlagiarismChecker","identUtf16":{"start":{"lineNumber":25,"utf16Col":4},"end":{"lineNumber":25,"utf16Col":21}},"extentUtf16":{"start":{"lineNumber":25,"utf16Col":4},"end":{"lineNumber":34,"utf16Col":5}}},{"name":"PlagiarismChecker","kind":"function","identStart":705,"identEnd":722,"extentStart":705,"extentEnd":889,"fullyQualifiedName":"PlagiarismChecker::PlagiarismChecker","identUtf16":{"start":{"lineNumber":36,"utf16Col":4},"end":{"lineNumber":36,"utf16Col":21}},"extentUtf16":{"start":{"lineNumber":36,"utf16Col":4},"end":{"lineNumber":41,"utf16Col":5}}},{"name":"createCorpus","kind":"function","identStart":902,"identEnd":914,"extentStart":897,"extentEnd":1358,"fullyQualifiedName":"PlagiarismChecker::createCorpus","identUtf16":{"start":{"lineNumber":43,"utf16Col":9},"end":{"lineNumber":43,"utf16Col":21}},"extentUtf16":{"start":{"lineNumber":43,"utf16Col":4},"end":{"lineNumber":58,"utf16Col":5}}},{"name":"isQuote","kind":"function","identStart":1371,"identEnd":1378,"extentStart":1366,"extentEnd":1657,"fullyQualifiedName":"PlagiarismChecker::isQuote","identUtf16":{"start":{"lineNumber":60,"utf16Col":9},"end":{"lineNumber":60,"utf16Col":16}},"extentUtf16":{"start":{"lineNumber":60,"utf16Col":4},"end":{"lineNumber":70,"utf16Col":5}}},{"name":"isRef","kind":"function","identStart":1670,"identEnd":1675,"extentStart":1665,"extentEnd":1852,"fullyQualifiedName":"PlagiarismChecker::isRef","identUtf16":{"start":{"lineNumber":72,"utf16Col":9},"end":{"lineNumber":72,"utf16Col":14}},"extentUtf16":{"start":{"lineNumber":72,"utf16Col":4},"end":{"lineNumber":79,"utf16Col":5}}},{"name":"calcPlag","kind":"function","identStart":1865,"identEnd":1873,"extentStart":1860,"extentEnd":1947,"fullyQualifiedName":"PlagiarismChecker::calcPlag","identUtf16":{"start":{"lineNumber":81,"utf16Col":9},"end":{"lineNumber":81,"utf16Col":17}},"extentUtf16":{"start":{"lineNumber":81,"utf16Col":4},"end":{"lineNumber":84,"utf16Col":5}}},{"name":"compDoc","kind":"function","identStart":1960,"identEnd":1967,"extentStart":1955,"extentEnd":2266,"fullyQualifiedName":"PlagiarismChecker::compDoc","identUtf16":{"start":{"lineNumber":86,"utf16Col":9},"end":{"lineNumber":86,"utf16Col":16}},"extentUtf16":{"start":{"lineNumber":86,"utf16Col":4},"end":{"lineNumber":96,"utf16Col":5}}},{"name":"createPat","kind":"function","identStart":2291,"identEnd":2300,"extentStart":2274,"extentEnd":2995,"fullyQualifiedName":"PlagiarismChecker::createPat","identUtf16":{"start":{"lineNumber":98,"utf16Col":21},"end":{"lineNumber":98,"utf16Col":30}},"extentUtf16":{"start":{"lineNumber":98,"utf16Col":4},"end":{"lineNumber":128,"utf16Col":5}}},{"name":"set_type","kind":"function","identStart":3008,"identEnd":3016,"extentStart":3003,"extentEnd":3060,"fullyQualifiedName":"PlagiarismChecker::set_type","identUtf16":{"start":{"lineNumber":130,"utf16Col":9},"end":{"lineNumber":130,"utf16Col":17}},"extentUtf16":{"start":{"lineNumber":130,"utf16Col":4},"end":{"lineNumber":133,"utf16Col":5}}},{"name":"compLines","kind":"function","identStart":3073,"identEnd":3082,"extentStart":3068,"extentEnd":5263,"fullyQualifiedName":"PlagiarismChecker::compLines","identUtf16":{"start":{"lineNumber":135,"utf16Col":9},"end":{"lineNumber":135,"utf16Col":18}},"extentUtf16":{"start":{"lineNumber":135,"utf16Col":4},"end":{"lineNumber":203,"utf16Col":5}}},{"name":"bruteforce","kind":"function","identStart":5276,"identEnd":5286,"extentStart":5271,"extentEnd":5452,"fullyQualifiedName":"PlagiarismChecker::bruteforce","identUtf16":{"start":{"lineNumber":205,"utf16Col":9},"end":{"lineNumber":205,"utf16Col":19}},"extentUtf16":{"start":{"lineNumber":205,"utf16Col":4},"end":{"lineNumber":209,"utf16Col":5}}},{"name":"getPat","kind":"function","identStart":5477,"identEnd":5483,"extentStart":5460,"extentEnd":6107,"fullyQualifiedName":"PlagiarismChecker::getPat","identUtf16":{"start":{"lineNumber":211,"utf16Col":21},"end":{"lineNumber":211,"utf16Col":27}},"extentUtf16":{"start":{"lineNumber":211,"utf16Col":4},"end":{"lineNumber":239,"utf16Col":5}}},{"name":"hammingDistance","kind":"function","identStart":6119,"identEnd":6134,"extentStart":6115,"extentEnd":6374,"fullyQualifiedName":"PlagiarismChecker::hammingDistance","identUtf16":{"start":{"lineNumber":241,"utf16Col":8},"end":{"lineNumber":241,"utf16Col":23}},"extentUtf16":{"start":{"lineNumber":241,"utf16Col":4},"end":{"lineNumber":250,"utf16Col":5}}},{"name":"rabinKarpSearch","kind":"function","identStart":6387,"identEnd":6402,"extentStart":6382,"extentEnd":8154,"fullyQualifiedName":"PlagiarismChecker::rabinKarpSearch","identUtf16":{"start":{"lineNumber":252,"utf16Col":9},"end":{"lineNumber":252,"utf16Col":24}},"extentUtf16":{"start":{"lineNumber":252,"utf16Col":4},"end":{"lineNumber":302,"utf16Col":5}}},{"name":"getTotalPlag","kind":"function","identStart":8166,"identEnd":8178,"extentStart":8162,"extentEnd":8221,"fullyQualifiedName":"PlagiarismChecker::getTotalPlag","identUtf16":{"start":{"lineNumber":304,"utf16Col":8},"end":{"lineNumber":304,"utf16Col":20}},"extentUtf16":{"start":{"lineNumber":304,"utf16Col":4},"end":{"lineNumber":307,"utf16Col":5}}},{"name":"getTotalRef","kind":"function","identStart":8233,"identEnd":8244,"extentStart":8229,"extentEnd":8286,"fullyQualifiedName":"PlagiarismChecker::getTotalRef","identUtf16":{"start":{"lineNumber":309,"utf16Col":8},"end":{"lineNumber":309,"utf16Col":19}},"extentUtf16":{"start":{"lineNumber":309,"utf16Col":4},"end":{"lineNumber":312,"utf16Col":5}}},{"name":"getTotalSim","kind":"function","identStart":8298,"identEnd":8309,"extentStart":8294,"extentEnd":8351,"fullyQualifiedName":"PlagiarismChecker::getTotalSim","identUtf16":{"start":{"lineNumber":314,"utf16Col":8},"end":{"lineNumber":314,"utf16Col":19}},"extentUtf16":{"start":{"lineNumber":314,"utf16Col":4},"end":{"lineNumber":317,"utf16Col":5}}},{"name":"getTotalQuotes","kind":"function","identStart":8363,"identEnd":8377,"extentStart":8359,"extentEnd":8422,"fullyQualifiedName":"PlagiarismChecker::getTotalQuotes","identUtf16":{"start":{"lineNumber":319,"utf16Col":8},"end":{"lineNumber":319,"utf16Col":22}},"extentUtf16":{"start":{"lineNumber":319,"utf16Col":4},"end":{"lineNumber":322,"utf16Col":5}}}]}},"copilotInfo":{"documentationUrl":"https://docs.github.com/copilot/overview-of-github-copilot/about-github-copilot-for-individuals","notices":{"codeViewPopover":{"dismissed":false,"dismissPath":"/settings/dismiss-notice/code_view_copilot_popover"}},"userAccess":{"accessAllowed":false,"hasSubscriptionEnded":false,"orgHasCFBAccess":false,"userHasCFIAccess":false,"userHasOrgs":false,"userIsOrgAdmin":false,"userIsOrgMember":false,"business":null,"featureRequestInfo":null}},"csrf_tokens":{"/HayaShalaby/CS2PROJ-milestone2/branches":{"post":"HT2DM1a-WsN3VjkQLqT_469B1omBevjheHZL2veyqFxYFLjaGh-RFWWOQ4fhAHMjWprzjvKjdZhZOgUrIs3JAA"},"/repos/preferences":{"post":"64cPBuwWk0ZLsU-YRTT6uYP3dxxvJUXzy4eF5yCJHIljdP3RguD5_G-CFtDE-IR7Rn0-Y9V5dMNfbKCaE9TNgQ"}}},"title":"CS2PROJ-milestone2/CS2_PlagiarismChecker/plagiarismchecker.h at main · HayaShalaby/CS2PROJ-milestone2"}